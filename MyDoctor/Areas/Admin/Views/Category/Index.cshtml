

@using MyDoctor.Areas.Admin.Models
@using MyDoctor.Models
@using PagedList.Core.Mvc
@model MyDoctor.Areas.Admin.Models.SearchViewModel

@{
    ViewData["Title"] = "Index";
    var message =TempData.Get<Message>("Message");

}

@switch (message)
{
    case null:
        break;
    case Message mess when mess.IsSuccess:
        <h4 class="alert alert-info">@mess.Content</h4>
        break;
    default:
        <h4 class="alert alert-danger">@message.Content</h4>
        break;
}
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">Create</button>
<form class="needs-validation" novalidate>
    
        <fieldset class="form-row">
            <legend >Create Date</legend>
            <div class="col-md-6 mb-3">
                <label for="createFrom">From</label>
                <input type="date" class="form-control" id="createFrom" name="createFrom">
                
            </div>
            <div class="col-md-6 mb-3">
                <label for="createTo">To</label>
                <input type="date" class="form-control" id="createTo" name="createTo">
            </div>
        </fieldset>
       
       
   
    <div class="form-row">
        <div class="col-md-6 mb-3">

            <input name="query" type="text" class="form-control" id="validationCustom01" value="@Model.SearchResult.SearchQuery" placeholder="Search">
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <button class="btn btn-primary" type="submit">Search</button>
        </div>
    </div>



</form>
<a class="btn btn-facebook" asp-action="ExportToExcel" target="_blank">ExportToExcel</a>
<table class="table" id="Category">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                Category
            </th>
            <th>
                CreateDate
            </th>
            <th>
                ModifiyDate
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SearchResult.Category)
    {
            <tr>

                <td>

                    <img src="@item.Image" class="img img-thumbnail" style="max-width: 150px;max-height: 150px" />
                </td>
                <td>
                    <h3>@item.Catagory</h3>

                </td>
                <td>
                    @if (item.CreateDate.HasValue)
                    {
                        @item.CreateDate.Value.ToShortDateString()
                    }
                    
                </td>
                <td>
                    @if (item.ModifiedDate.HasValue)
                    {
                        @item.ModifiedDate.Value.ToShortDateString()
                    }
                </td>
                <td>
                    <input data-flag="Id" value="@item.Id" style="display: none" type="number"/>
                    <input data-flag="Image" value="@item.Image" style="display: none" type="text"/>
                    <input data-flag="Catagory" value="@item.Catagory" style="display: none" type="text"/>
                    <input data-flag="CreateDate" value="@item.CreateDate" style="display: none" type="text"/>
                    

                    <button class="btn btn-primary" onclick="editCategory({Id:@item.Id,Image:'@item.Image',Catagory:'@item.Catagory',CreateDate:'@item.CreateDate'})">Edit</button>
                    <form asp-action="Delete" id="deleteCategory" style="display: inline-block">
                        <input name="id" value="@item.Id" style="display: none" />
                        <button class="btn btn-danger" type="submit">Delete</button>
                    </form>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<section>
    @await Html.PartialAsync("_CreateEdit", new BeatyandHealthy())
</section>
<p><pager class="pager-container" list="@Model.SearchResult.Category" options="@PagedListRenderOptions.TwitterBootstrapPager4" asp-action="Index" asp-controller="Category" asp-route-query="@Model.SearchResult.SearchQuery" asp-route-createFrom="@Model.SearchResult.CreateFrom" asp-route-createTo="@Model.SearchResult.CreateTo"/></p>
@section Scripts
{
    <script>


        function editCategory(category) {
            $('#id-name').val(category.Id);
            $('#category-name').val(category.Catagory);
            $('#image-name').val(category.Image);
            $('#CreateDate').val(category.CreateDate);
            $('#exampleModal').modal('show');
        }

        $(document).ready(() => {
            $('#deleteCategory').submit(function(e) {
                console.log("submit");
                var r = confirm("Are You Sure You Want To Delete");
                if (r === false) e.preventDefault();

            });
            $('#exampleModal').on('hidden.bs.modal',
                function(e) {
                    $('#id-name').val('');
                    $('#category-name').val('');
                    $('#image-name').val('');
                    $('#CreateDate-name').val('');
                });
        });
    </script>
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function() {
            'use strict';
            window.addEventListener('load',
                function() {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms,
                        function(form) {
                            form.addEventListener('submit',
                                function(event) {
                                    if (form.checkValidity() === false) {
                                        event.preventDefault();
                                        event.stopPropagation();
                                    }
                                    form.classList.add('was-validated');
                                },
                                false);
                        });
                },
                false);
        })();
    </script>
}
