@using MYDoctor.Core.Application.IRepository
@inject IUserProfileRepository userProfileRepository
@model UserProfileViewModel
@{
    var user = await userProfileRepository.GetFirstAsync(a => a.Email == User.Identity.Name);
}
<!--**********************************
           Content body start
       ***********************************-->
<div class="content-body">

    <div class="row page-titles mx-0">
        <div class="col p-md-0">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="javascript:void(0)">MyDoctor</a></li>
                <li class="breadcrumb-item active"><a href="javascript:void(0)">Profile</a></li>
            </ol>
        </div>
    </div>
    <!-- row -->

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-4 col-xl-3">
                <div class="card">
                    <div class="card-body">
                        <div class="media align-items-center mb-4">
                            <img class="mr-3" src="~/images/@Model.UserProfile.ImagePath" width="80" height="80" alt="">
                            <div class="media-body">
                                <h3 class="mb-0">@Model.UserProfile.Name</h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-8 col-xl-9">
                <div class="card">
                    <div class="card-body">
                        @foreach (var post in Model.Posts)
                        {
                            <div class="media media-reply">
                                <img class="mr-3 circle-rounded" src="~/images/@post.User.ImagePath" width="50" height="50" alt="@post.User.Name">
                                <div class="media-body">
                                    <div class="d-sm-flex justify-content-between mb-2">
                                        <h5 class="mb-sm-0">@post.User.Name</h5>
                                        <div class="media-reply__link">
                                            <button class="btn btn-transparent p-0 mr-3"><span class="badge badge-pill gradient-2 mr-1" id="LikeNumber">@post.Likes.Count()</span><i style="@(post.Likes.FirstOrDefault(l=>l.UserProfileId==user.Id)!=null?"color:red":"")" onclick="addLike(@post.Id)" class="fa fa-thumbs-up"></i></button>
                                            <button class="btn btn-transparent p-0 mr-3"><span class="badge gradient-3 badge-pill gradient-1 mr-1" id="DisLikeNumber">@post.DisLikes.Count()</span><i style="@(post.DisLikes.FirstOrDefault(l=>l.UserProfileId==user.Id)!=null?"color:red":"")" onclick="addDisLike(@post.Id)" class="fa fa-thumbs-down"></i></button>
                                        </div>
                                    </div>
                                    <p class="font-weight-bold">@(post.Category?.Category)</p>
                                    <small class="text-muted">@post.CreateDate.ToString()</small>

                                    <p>@post.Content</p>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- #/ container -->
</div>
@section Scripts{
    <script src="~/js/LikeDisLike.js"></script>

}
<!--**********************************
    Content body end
***********************************-->
